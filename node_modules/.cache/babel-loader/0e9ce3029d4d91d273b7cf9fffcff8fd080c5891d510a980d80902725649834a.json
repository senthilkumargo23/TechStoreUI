{"ast":null,"code":"var _jsxFileName = \"C:\\\\TechStoreProject\\\\frontend-react-ui\\\\src\\\\Components\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [userid, setUserid] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState({\n    userid: \"\",\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //     const auth = localStorage.getItem('user');\n  //     if (auth) {\n  //         navigate('/')\n  //     }\n  // }, [])\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (name === \"\") {\n      setError(prevError => {\n        console.log(prevError); //As we use => function console we cannot see the prevError so we use different approach here for name field alone\n        return {\n          ...prevError,\n          name: \"Name is required\"\n        };\n      });\n    }\n\n    //once we fill the name we should clear the error message --do the same for other fields as well\n\n    if (name !== \"\") {\n      setError(prevError => ({\n        ...prevError,\n        name: \"\"\n      }));\n    }\n    if (email === \"\") {\n      setError(prevError => ({\n        ...prevError,\n        email: \"Email is required\"\n      }));\n    }\n    if (password === \"\") {\n      setError(prevError => ({\n        ...prevError,\n        password: \"Password is required\"\n      }));\n    }\n    if (email !== \"\") {\n      if (!email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)) {\n        setError(prevError => ({\n          ...prevError,\n          email: \"Email is not valid\"\n        }));\n      }\n    }\n    if (password !== \"\") {\n      if (password.length < 8) {\n        setError(prevError => ({\n          ...prevError,\n          password: \"Password should be atleast 8 characters\"\n        }));\n      }\n      if (!password.match(/[@#$%^&*()!]/)) {\n        setError(prevError => ({\n          ...prevError,\n          password: \"Password should contain atleast one special character\"\n        }));\n      }\n    }\n    const collectData = async () => {\n      //console.warn(name, email, password);\n      let result = await fetch(\"http://localhost:8001/api/register\", {\n        method: 'post',\n        body: JSON.stringify({\n          userid,\n          name,\n          email,\n          password\n        }),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      result = await result.json();\n      console.warn(result);\n      localStorage.setItem(\"user\", JSON.stringify(result.result));\n      navigate('/');\n    };\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"register\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputBox\",\n          type: \"text\",\n          placeholder: \"Enter UserID\",\n          value: userid,\n          onChange: e => setUserid(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputBox\",\n          type: \"text\",\n          placeholder: \"Enter Name\",\n          value: name,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputBox\",\n          type: \"text\",\n          placeholder: \"Enter Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"inputBox\",\n          type: \"password\",\n          placeholder: \"Enter password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: collectData,\n          className: \"appButton\",\n          type: \"button\",\n          children: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(Registration, \"AETKLfNWr4655hBjfbrFj902a0M=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Registration","_s","userid","setUserid","name","setName","email","setEmail","password","setPassword","error","setError","navigate","handleSubmit","e","preventDefault","prevError","console","log","match","length","collectData","result","fetch","method","body","JSON","stringify","headers","json","warn","localStorage","setItem","children","onSubmit","className","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/TechStoreProject/frontend-react-ui/src/Components/Registration.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Registration = () => {\r\n    const [userid, setUserid] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [error,setError] = useState({userid:\"\",name:\"\",email:\"\",password:\"\"});\r\n\r\n    const navigate = useNavigate();\r\n    // useEffect(() => {\r\n    //     const auth = localStorage.getItem('user');\r\n    //     if (auth) {\r\n    //         navigate('/')\r\n    //     }\r\n    // }, [])\r\n\r\n    \r\n\r\n    function handleSubmit(e){\r\n        e.preventDefault();\r\n        if(name === \"\"){\r\n            setError(prevError =>{\r\n                console.log(prevError) //As we use => function console we cannot see the prevError so we use different approach here for name field alone\r\n                return {\r\n                ...prevError,\r\n                name:\"Name is required\"\r\n            };\r\n            });\r\n        }\r\n\r\n        //once we fill the name we should clear the error message --do the same for other fields as well\r\n\r\n        if(name !== \"\"){\r\n            setError(prevError =>({\r\n                ...prevError,\r\n                name:\"\"\r\n            }));\r\n        }   \r\n\r\n        if(email === \"\"){\r\n            setError(prevError => ({\r\n                ...prevError,\r\n                email:\"Email is required\"\r\n            }))\r\n        }\r\n       \r\n        if(password === \"\"){\r\n            setError(prevError => ({\r\n                ...prevError,\r\n                password:\"Password is required\"\r\n            }))\r\n        }\r\n        if(email !== \"\"){\r\n            if(!email.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i)){\r\n                setError(prevError => ({\r\n                    ...prevError,\r\n                    email:\"Email is not valid\"\r\n                }))\r\n            }\r\n        }\r\n        \r\n        if(password !== \"\"){\r\n            if(password.length < 8){\r\n                setError(prevError => ({\r\n                    ...prevError,\r\n                    password:\"Password should be atleast 8 characters\"\r\n                }))\r\n            }\r\n            if(!password.match(/[@#$%^&*()!]/)){\r\n                setError(prevError => ({\r\n                    ...prevError,\r\n                    password:\"Password should contain atleast one special character\"\r\n                }))\r\n            }\r\n        }\r\n     \r\n         \r\n        const collectData = async () => {\r\n            //console.warn(name, email, password);\r\n            let result = await fetch(\"http://localhost:8001/api/register\", {\r\n                method: 'post',\r\n                body: JSON.stringify({ userid, name, email, password }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            result = await result.json();\r\n            console.warn(result);\r\n            localStorage.setItem(\"user\", JSON.stringify(result.result))\r\n        \r\n            navigate('/')\r\n            }\r\n   \r\n\r\n    }\r\n  return (\r\n    <>\r\n    <form onSubmit={handleSubmit}>\r\n     <div className=\"register\">\r\n            <h1>Register</h1>\r\n            <input className=\"inputBox\" type=\"text\" placeholder=\"Enter UserID\"\r\n                value={userid} onChange={(e) => setUserid(e.target.value)}\r\n            />\r\n            <input className=\"inputBox\" type=\"text\" placeholder=\"Enter Name\"\r\n                value={name} onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input className=\"inputBox\" type=\"text\" placeholder=\"Enter Email\"\r\n                value={email} onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input className=\"inputBox\" type=\"password\" placeholder=\"Enter password\"\r\n                value={password} onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={collectData} className=\"appButton\" type=\"button\">Sign Up</button>\r\n        </div>\r\n    </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Registration;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}