{"ast":null,"code":"var _jsxFileName = \"C:\\\\TechStoreProject\\\\frontend-react-ui\\\\src\\\\Components\\\\Registration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Registration = () => {\n  _s();\n  const [userid, setUserid] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  let [error, setError] = useState({\n    name: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const navigate = useNavigate();\n  // useEffect(() => {\n  //     const auth = localStorage.getItem('user');\n  //     if (auth) {\n  //         navigate('/')\n  //     }\n  // }, [])\n\n  function handleInput(e) {\n    e.preventDefault();\n    if (name === \"\") {\n      setError(prevError => {\n        console.log(prevError); //As we use => function console we cannot see the prevError so we use different approach here for name field alone\n        return {\n          ...prevError,\n          name: \"Name is required\"\n        };\n      });\n    }\n\n    //once we fill the name we should clear the error message --do the same for other fields as well\n\n    if (name !== \"\") {\n      setError(prevError => ({\n        ...prevError,\n        name: \"\"\n      }));\n    }\n  }\n  const collectData = async () => {\n    //console.warn(name, email, password);\n\n    let result = await fetch(\"http://localhost:8001/api/register\", {\n      method: 'post',\n      body: JSON.stringify({\n        userid,\n        name,\n        email,\n        password\n      }),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    result = await result.json();\n    console.warn(result);\n    localStorage.setItem(\"user\", JSON.stringify(result.result));\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"register\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: \"Enter UserID\",\n      value: userid,\n      onChange: e => setUserid(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: \"Enter Name\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"text\",\n      placeholder: \"Enter Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"inputBox\",\n      type: \"password\",\n      placeholder: \"Enter password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: collectData,\n      className: \"appButton\",\n      type: \"button\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 6\n  }, this);\n};\n_s(Registration, \"Aox3JYOkJurWhzACiMXYI0d2BaA=\", false, function () {\n  return [useNavigate];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","Registration","_s","userid","setUserid","name","setName","email","setEmail","password","setPassword","error","setError","navigate","handleInput","e","preventDefault","prevError","console","log","collectData","result","fetch","method","body","JSON","stringify","headers","json","warn","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["C:/TechStoreProject/frontend-react-ui/src/Components/Registration.js"],"sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst Registration = () => {\r\n    const [userid, setUserid] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    let [error,setError] = useState({name:\"\",email:\"\",password:\"\"});\r\n\r\n    const navigate = useNavigate();\r\n    // useEffect(() => {\r\n    //     const auth = localStorage.getItem('user');\r\n    //     if (auth) {\r\n    //         navigate('/')\r\n    //     }\r\n    // }, [])\r\n\r\n    \r\n    function handleInput(e){\r\n        e.preventDefault();\r\n        if(name === \"\"){\r\n            setError(prevError =>{\r\n                console.log(prevError) //As we use => function console we cannot see the prevError so we use different approach here for name field alone\r\n                return {\r\n                ...prevError,\r\n                name:\"Name is required\"\r\n            };\r\n            });\r\n        }\r\n\r\n        //once we fill the name we should clear the error message --do the same for other fields as well\r\n\r\n        if(name !== \"\"){\r\n            setError(prevError =>({\r\n                ...prevError,\r\n                name:\"\"\r\n            }));\r\n        }\r\n    }   \r\n\r\n   \r\n     \r\n         \r\n        const collectData = async () => {\r\n            //console.warn(name, email, password);\r\n\r\n            \r\n            let result = await fetch(\"http://localhost:8001/api/register\", {\r\n                method: 'post',\r\n                body: JSON.stringify({ userid, name, email, password }),\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                }\r\n            });\r\n            result = await result.json();\r\n            console.warn(result);\r\n            localStorage.setItem(\"user\", JSON.stringify(result.result))\r\n        \r\n            navigate('/')\r\n            }\r\n   \r\n\r\n \r\n  return (\r\n\r\n     <div className=\"register\">\r\n            <h1>Register</h1>\r\n            <input className=\"inputBox\" type=\"text\" placeholder=\"Enter UserID\"\r\n                value={userid} onChange={(e) => setUserid(e.target.value)}\r\n            />\r\n            <p>{error.name}</p>\r\n            <input className=\"inputBox\" type=\"text\" placeholder=\"Enter Name\"\r\n                value={name} onChange={(e) => setName(e.target.value)}\r\n            />\r\n            <input className=\"inputBox\" type=\"text\" placeholder=\"Enter Email\"\r\n                value={email} onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <input className=\"inputBox\" type=\"password\" placeholder=\"Enter password\"\r\n                value={password} onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <button onClick={collectData} className=\"appButton\" type=\"button\">Sign Up</button>\r\n        </div>\r\n\r\n  );\r\n};\r\n\r\nexport default Registration;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAACC,SAAS,QAAQ,OAAO;AACjD,SAASC,WAAW,QAAQ,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACS,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,IAAI,CAACe,KAAK,EAACC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC;IAACS,IAAI,EAAC,EAAE;IAACE,KAAK,EAAC,EAAE;IAACE,QAAQ,EAAC;EAAE,CAAC,CAAC;EAE/D,MAAMI,QAAQ,GAAGf,WAAW,CAAC,CAAC;EAC9B;EACA;EACA;EACA;EACA;EACA;;EAGA,SAASgB,WAAWA,CAACC,CAAC,EAAC;IACnBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAGX,IAAI,KAAK,EAAE,EAAC;MACXO,QAAQ,CAACK,SAAS,IAAG;QACjBC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC,EAAC;QACvB,OAAO;UACP,GAAGA,SAAS;UACZZ,IAAI,EAAC;QACT,CAAC;MACD,CAAC,CAAC;IACN;;IAEA;;IAEA,IAAGA,IAAI,KAAK,EAAE,EAAC;MACXO,QAAQ,CAACK,SAAS,KAAI;QAClB,GAAGA,SAAS;QACZZ,IAAI,EAAC;MACT,CAAC,CAAC,CAAC;IACP;EACJ;EAKI,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC5B;;IAGA,IAAIC,MAAM,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MAC3DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEvB,MAAM;QAAEE,IAAI;QAAEE,KAAK;QAAEE;MAAS,CAAC,CAAC;MACvDkB,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACFN,MAAM,GAAG,MAAMA,MAAM,CAACO,IAAI,CAAC,CAAC;IAC5BV,OAAO,CAACW,IAAI,CAACR,MAAM,CAAC;IACpBS,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACC,SAAS,CAACL,MAAM,CAACA,MAAM,CAAC,CAAC;IAE3DR,QAAQ,CAAC,GAAG,CAAC;EACb,CAAC;EAIX,oBAEGb,OAAA;IAAKgC,SAAS,EAAC,UAAU;IAAAC,QAAA,gBAClBjC,OAAA;MAAAiC,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBrC,OAAA;MAAOgC,SAAS,EAAC,UAAU;MAACM,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,cAAc;MAC9DC,KAAK,EAAErC,MAAO;MAACsC,QAAQ,EAAG1B,CAAC,IAAKX,SAAS,CAACW,CAAC,CAAC2B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACFrC,OAAA;MAAAiC,QAAA,EAAItB,KAAK,CAACN;IAAI;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBrC,OAAA;MAAOgC,SAAS,EAAC,UAAU;MAACM,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,YAAY;MAC5DC,KAAK,EAAEnC,IAAK;MAACoC,QAAQ,EAAG1B,CAAC,IAAKT,OAAO,CAACS,CAAC,CAAC2B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzD,CAAC,eACFrC,OAAA;MAAOgC,SAAS,EAAC,UAAU;MAACM,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,aAAa;MAC7DC,KAAK,EAAEjC,KAAM;MAACkC,QAAQ,EAAG1B,CAAC,IAAKP,QAAQ,CAACO,CAAC,CAAC2B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CAAC,eACFrC,OAAA;MAAOgC,SAAS,EAAC,UAAU;MAACM,IAAI,EAAC,UAAU;MAACC,WAAW,EAAC,gBAAgB;MACpEC,KAAK,EAAE/B,QAAS;MAACgC,QAAQ,EAAG1B,CAAC,IAAKL,WAAW,CAACK,CAAC,CAAC2B,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjE,CAAC,eACFrC,OAAA;MAAQ2C,OAAO,EAAEvB,WAAY;MAACY,SAAS,EAAC,WAAW;MAACM,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjF,CAAC;AAGd,CAAC;AAACnC,EAAA,CAlFID,YAAY;EAAA,QAOGH,WAAW;AAAA;AAAA8C,EAAA,GAP1B3C,YAAY;AAoFlB,eAAeA,YAAY;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}